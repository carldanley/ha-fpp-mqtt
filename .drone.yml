kind: pipeline
type: docker
name: default

steps:
- name: lint
  image: golang:alpine
  environment:
    GOLINTCI_VERSION: v1.50.1
    CGO_ENABLED: 0
    GOOS: linux
  commands:
  - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLINTCI_VERSION}
  - golangci-lint --version
  - golangci-lint run

- name: build
  image: golang:alpine
  environment:
    GITHUB_TOKEN:
      from_secret: github-pat-packages
  commands:
  - apk add git
  - git version
  - git fetch --tags
  - go install github.com/goreleaser/goreleaser@latest
  - goreleaser --version
  - goreleaser release --rm-dist -f ./.goreleaser.yml
  when:
    ref:
    - refs/tags/*
  depends_on:
  - lint

- name: publish-container
  image: plugins/docker
  settings:
    repo: ghcr.io/carldanley/ha-fpp-mqtt
    registry: ghcr.io
    auto_tag: true
    username:
      from_secret: github-username
    password:
      from_secret: github-pat-packages
    build_args:
    - COMMIT_SHA=${DRONE_COMMIT_SHA}
    - COMMIT_AUTHOR_EMAIL=${DRONE_COMMIT_AUTHOR_EMAIL}
    - --label=org.opencontainers.image.created=${DRONE_BUILD_CREATED}
    - --label=org.opencontainers.image.name=${DRONE_REPO_NAME}
    - --label=org.opencontainers.image.revision=${DRONE_COMMIT_SHA}
    - --label=org.opencontainers.image.version=${DRONE_TAG}
    - --label=org.opencontainers.image.source=${DRONE_REMOTE_URL}
    - --label=org.opencontainers.image.licenses=MIT
    - --label=VERSION=${DRONE_TAG}
    - --platform=linux/amd64
  when:
    ref:
    - refs/tags/*
  depends_on:
  - build-code
