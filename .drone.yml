kind: pipeline
type: docker
name: default

steps:
- name: lint-code
  image: golang:alpine
  environment:
    GOLINTCI_VERSION: v1.50.1
    CGO_ENABLED: 0
    GOOS: linux
  commands:
  - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLINTCI_VERSION}
  - golangci-lint --version
  - golangci-lint run

- name: build-code
  image: golang:alpine
  environment:
    CGO_ENABLED: 0
    GOOS: linux
  commands:
  - go build -a -installsuffix cgo -o ha-fpp-mqtt
  when:
    ref:
    - refs/tags/*
  depends_on:
  - lint-code

- name: publish-container
  image: plugins/docker
  settings:
    repo: alfred/ha-fpp-mqtt
    registry: reg.r1p.io
    auto_tag: true
    username:
      from_secret: docker-username
    password:
      from_secret: docker-password
    build_args:
    - COMMIT_SHA=${DRONE_COMMIT_SHA}
    - COMMIT_AUTHOR_EMAIL=${DRONE_COMMIT_AUTHOR_EMAIL}
  when:
    ref:
    - refs/tags/*
  depends_on:
  - build-code

# - name: deploy
#   image: appleboy/drone-ssh
#   settings:
#     host:
#       from_secret: ssh-host
#     port:
#       from_secret: ssh-port
#     key:
#       from_secret: ssh-key
#     username:
#       from_secret: ssh-username
#     script_stop: true
#     script:
#     - docker-compose -f /home/$(whoami)/services.yaml pull ha-fpp-mqtt
#     - docker-compose -f /home/$(whoami)/services.yaml up -d ha-fpp-mqtt
#     - docker image prune --all --force
#   when:
#     ref:
#     - refs/tags/*
#   depends_on:
#   - publish-container
